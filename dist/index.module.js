import{parse as r}from"svg-parser";import t from"svgpath";var e=Object.assign||function(r){[].slice.call(arguments,1).forEach(function(t){Object.keys(t).forEach(function(e){r[e]=t[e]})})};function n(r,t){var e={};return Object.keys(r).forEach(function(n){~t.indexOf(n)||(e[n]=r[n])}),e}function o(r){for(var t="",e="M",n=0;n<r.length;n+=2)t+=""+e+r[n]+","+r[n+1],e=" ";return t}var i={ellipse:function(r){var t=r.cx||0,e=r.cy||0,o=r.rx||0,i=r.ry||0,a=n(r,["cx","cy","rx","ry"]);return a.d="M"+(t-o)+","+e+"a"+o+","+i+" 0 1,0 "+2*o+",0a"+o+","+i+" 0 1,0 "+-2*o+",0",a},circle:function(r){var t=r.cx||0,e=r.cy||0,o=r.r||0,i=n(r,["cx","cy","r"]);return i.d="M"+(t-o)+","+e+"a"+o+","+o+" 0 1,0 "+2*o+",0a"+o+","+o+" 0 1,0 "+-2*o+",0",i},polygon:function(r){var t=i.polyline(r);return t.d+="Z",t},polyline:function(r){var t=n(r,"points");return t.d=o(r.points.trim().split(/[\s,]+/)),t},rect:function(r){var t=+r.x||0,e=+r.y||0,o=+r.width||0,i=+r.height||0,a=n(r,["x","y","width","height","rx","ry"]);return a.d="m"+t+","+e+" "+o+",0 0,"+i+" "+-o+",0,0,"+-i+"Z",a},line:function(r){var t=n(r,["x1","y1","x2","y2"]);return t.d=o([r.x1||0,r.y1||0,r.x2||0,r.y2||0]),t}};function a(r,t){r.properties=e(t,r.properties)}function c(r,t){r.properties.class&&(t=e({},t),r.properties.class.split(" ").filter(Boolean).forEach(function(r){return t[r]=!0}));var n=Object.keys(t).join(" ");n&&(r.properties.class=n)}function s(r,e){r.properties.transform&&(e=e.concat(r.properties.transform),delete r.properties.transform);var n=e.join(" ");"path"===r.tagName?r.properties.d=t(r.properties.d).transform(n).round(10).toString():n&&(r.properties.transform=n)}var u=["defs","title"],p=["id","class","style","transform"];function f(r,t,o,l,h){if("svg"===r.tagName){var g=o.slice();r.children.forEach(function(r){f(r,t,g,e({},l),e({},h))})}else"g"===r.tagName?(o=r.properties.transform?o.concat(r.properties.transform):o,r.properties.class&&r.properties.class.split(" ").filter(Boolean).forEach(function(r){return l[r]=!0}),r.children.forEach(function(i){var a=e({},l),c=e(n(h,p),n(r.properties,p));f(i,t,o,a,c)})):~u.indexOf(r.tagName)?(a(r,h),c(r,l),s(r,o),t.push(r)):(a(r,h),c(r,l),"path"!==r.tagName&&(r=function(r){var t=i[r.tagName];if(t)return{tagName:"path",properties:t(r.properties)};throw new Error("TODO <"+r.tagName+">")}(r)),s(r,o),t.push(r))}function l(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function h(r,t){if("string"==typeof r)return r;var e=function(r){return Object.keys(r).map(function(t){return" "+t+'="'+r[t]+'"'}).join("")}(r.properties),n=t+"<"+r.tagName+e;if(r.children&&r.children.length){n+=">";for(var o,i="\n",a=function(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(r){if("string"==typeof r)return l(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?l(r,t):void 0}}(r))){e&&(r=e);var n=0;return function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(e=r[Symbol.iterator]()).next.bind(e)}(r.children);!(o=a()).done;){var c=o.value;"string"==typeof c?(n+=c,i=""):"text"===c.type?(n+=c.value,i=""):(n+=i+h(c,t+"\t"),i="\n")}i&&(i+=t),n+=i+"</"+r.tagName+">"}else n+=r.value?">"+r.value+"</"+r.tagName+">":"/>";return n}var g=function(){function t(t){this.source=r(t).children[0],this.target={tagName:this.source.tagName,properties:Object.assign({},this.source.properties),children:[]},f(this.source,this.target.children,[],{},{})}return t.prototype.toString=function(){return h(this.target,"")},t}();function m(r){return new g(r).toString()}function y(r){var t=new g(r);return{paths:t.target.children.filter(function(r){return"path"===r.tagName}).map(function(r){return r.properties}),toString:function(){return t.toString()}}}export{y as parse,m as transform};
//# sourceMappingURL=index.module.js.map
